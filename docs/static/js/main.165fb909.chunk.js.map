{"version":3,"sources":["Components/Header.js","Components/Formulario.js","Helpers/helper.js","Components/Mensaje.js","Components/Resultado.js","Components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","titulo","Formulario","useState","error","guardarError","cantidad","guardarCantidad","plazo","guardarPlazo","guardarTotal","guardarCargando","onSubmit","e","preventDefault","setTimeout","total","totalCantidad","totalPlazo","calcularTotal","document","querySelector","reset","className","type","placeholder","onChange","Number","target","value","Mensaje","Resultado","toFixed","Spinner","App","componente","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.165fb909.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\n// function Header(props) {\r\n//     const { titulo } = props;\r\n\r\n//     return (\r\n//         <Fragment>\r\n//             <h1>{titulo}</h1>\r\n//         </Fragment>\r\n//     );\r\n// }\r\n\r\nconst Header = (props) => {\r\n    const { titulo } = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>{titulo}</h1>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import React, { useState, Fragment } from 'react';\r\nimport { calcularTotal } from '../Helpers/helper.js';\r\n\r\nconst Formulario = (props) => {\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const { cantidad, guardarCantidad, plazo, guardarPlazo, guardarTotal, guardarCargando } = props;\r\n\r\n    const calcularPrestamo = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (cantidad === 0 || plazo === '') {\r\n            guardarError(true);\r\n\r\n        } else {\r\n            guardarError(false);\r\n            guardarCargando(true);\r\n\r\n            setTimeout(() => {\r\n                guardarCargando(false);\r\n\r\n                const total = calcularTotal(cantidad, plazo);\r\n                guardarTotal(total);\r\n                document.querySelector('form').reset();\r\n            }, 3000);\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={calcularPrestamo}>\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <label>Cantidad Prestamo</label>\r\n                        <input\r\n                            className=\"u-full-width\"\r\n                            type=\"number\"\r\n                            placeholder=\"Ejemplo: 3000\"\r\n                            onChange={e => guardarCantidad(Number(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Plazo para Pagar</label>\r\n                        <select className=\"u-full-width\" onChange={e => guardarPlazo(Number(e.target.value))}>\r\n                            <option value=\"\">Seleccionar</option>\r\n                            <option value=\"3\">3 meses</option>\r\n                            <option value=\"6\">6 meses</option>\r\n                            <option value=\"12\">12 meses</option>\r\n                            <option value=\"24\">24 meses</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Calcular\"\r\n                            className=\"button-primary u-full-width\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {(error) ? <p className=\"error\">Todos los campos son obligatorios</p> : null}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Formulario;\r\n","function calcularTotal(cantidad, plazo) {\r\n    /* \r\n    Cantidades.\r\n        0 - 1000: 25%\r\n        1001 - 5000: 20%\r\n        5001 - 10000: 15%\r\n        +10000 - 10%\r\n    */\r\n\r\n    let totalCantidad = 0, totalPlazo = 0;\r\n\r\n    if (cantidad <= 1000) {\r\n        totalCantidad = cantidad * 0.25;\r\n    } else if (cantidad > 1000 && cantidad <= 5000) {\r\n        totalCantidad = cantidad * 0.20;\r\n    } else if (cantidad > 5000 && cantidad <= 10000) {\r\n        totalCantidad = cantidad * 0.15;\r\n    } else {\r\n        totalCantidad = cantidad * 0.10;\r\n    }\r\n\r\n    /* \r\n    Calcular plazo\r\n        3 meses - 5%.\r\n        6 meses - 10%.\r\n        12 meses - 15%.\r\n        24 meses - 20%.\r\n    */\r\n\r\n    switch (plazo) {\r\n        case 3:\r\n            totalPlazo = cantidad * 0.05;\r\n            break;\r\n\r\n        case 6:\r\n            totalPlazo = cantidad * 0.10;\r\n            break;\r\n\r\n        case 12:\r\n            totalPlazo = cantidad * 0.15;\r\n            break;\r\n\r\n        case 24:\r\n            totalPlazo = cantidad * 0.20;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (totalPlazo + totalCantidad + cantidad);\r\n}\r\n\r\n\r\nexport {\r\n    calcularTotal\r\n}","import React from 'react';\r\n\r\nconst Mensaje = () => {\r\n    return (\r\n        <p>Agrega una cantidad y plazo a pagar para cotizar</p>\r\n    );\r\n}\r\n\r\nexport default Mensaje;","import React from 'react';\r\n\r\nconst Resultado = (props) => {\r\n\r\n    const { cantidad, plazo, total } = props;\r\n\r\n    return (\r\n        <div className=\"u-full-width resultado\">\r\n            <h2>Resumen</h2>\r\n            <p>La cantidad solicitada es: ${cantidad}</p>\r\n            <p>A pagar en: {plazo} meses</p>\r\n            <p>Su pago mensual es de: {(total / plazo).toFixed(2)}</p>\r\n            <p><b>Total a pagar: {(total).toFixed(2)}</b></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Resultado;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"bounce1\"></div>\r\n            <div className=\"bounce2\"></div>\r\n            <div className=\"bounce3\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { Fragment, useState } from 'react';\nimport Header from './Components/Header.js';\nimport Formulario from './Components/Formulario.js';\nimport Mensaje from './Components/Mensaje.js';\nimport Resultado from './Components/Resultado.js';\nimport Spinner from './Components/Spinner.js';\n\nfunction App() {\n\n  const [cantidad, guardarCantidad] = useState(0);\n  const [plazo, guardarPlazo] = useState('');\n  const [total, guardarTotal] = useState(0);\n  const [cargando, guardarCargando] = useState(false);\n\n  let componente;\n\n  if (cargando) {\n    componente = <Spinner />\n  } else if (total === 0) {\n    componente = <Mensaje />\n  } else {\n    componente =\n      <Resultado\n        cantidad={cantidad}\n        plazo={plazo}\n        total={total}\n      />\n  }\n\n  return (\n    <Fragment>\n      <Header titulo={\"Cotizador de prestamos\"} />\n      <div className=\"container\">\n        <Formulario\n          cantidad={cantidad}\n          guardarCantidad={guardarCantidad}\n          plazo={plazo}\n          guardarPlazo={guardarPlazo}\n          guardarTotal={guardarTotal}\n          guardarCargando={guardarCargando}\n        />\n        <div className=\"mensajes\">\n          {componente}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}